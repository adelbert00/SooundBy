declare const _default: import("vue").DefineComponent<{
    media: {
        type: ObjectConstructor;
        required: boolean;
        default: null;
    };
    canvWidth: {
        type: NumberConstructor;
        default: number;
    };
    canvClass: {
        type: StringConstructor;
        default: string;
    };
    canvHeight: {
        type: NumberConstructor;
        default: number;
    };
    canvFillColor: {
        type: StringConstructor;
        default: string;
    };
    circleGradient: {
        type: ArrayConstructor;
        default: (string | number)[][];
    };
    fftSize: {
        type: NumberConstructor;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    frequLnum: {
        type: NumberConstructor;
        default: number;
    };
    frequLineCap: {
        type: BooleanConstructor;
        default: boolean;
    };
    frequDirection: {
        type: StringConstructor;
        default: string;
    };
    lineColor: {
        type: StringConstructor;
        default: string;
    };
    lineWidth: {
        type: NumberConstructor;
    };
    radius: {
        type: NumberConstructor;
        default: number;
    };
    connectDestination: {
        type: BooleanConstructor;
        default: boolean;
    };
    vbarBgColor: {
        type: StringConstructor;
        default: string;
    };
    vbarCaps: {
        type: BooleanConstructor;
        default: boolean;
    };
    vbarSpace: {
        type: NumberConstructor;
        default: number;
    };
    vbarWidth: {
        type: NumberConstructor;
        default: number;
    };
    vbarFillColor: {
        type: StringConstructor;
        default: string;
    };
    vbarRightColor: {
        type: StringConstructor;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    media: {
        type: ObjectConstructor;
        required: boolean;
        default: null;
    };
    canvWidth: {
        type: NumberConstructor;
        default: number;
    };
    canvClass: {
        type: StringConstructor;
        default: string;
    };
    canvHeight: {
        type: NumberConstructor;
        default: number;
    };
    canvFillColor: {
        type: StringConstructor;
        default: string;
    };
    circleGradient: {
        type: ArrayConstructor;
        default: (string | number)[][];
    };
    fftSize: {
        type: NumberConstructor;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    frequLnum: {
        type: NumberConstructor;
        default: number;
    };
    frequLineCap: {
        type: BooleanConstructor;
        default: boolean;
    };
    frequDirection: {
        type: StringConstructor;
        default: string;
    };
    lineColor: {
        type: StringConstructor;
        default: string;
    };
    lineWidth: {
        type: NumberConstructor;
    };
    radius: {
        type: NumberConstructor;
        default: number;
    };
    connectDestination: {
        type: BooleanConstructor;
        default: boolean;
    };
    vbarBgColor: {
        type: StringConstructor;
        default: string;
    };
    vbarCaps: {
        type: BooleanConstructor;
        default: boolean;
    };
    vbarSpace: {
        type: NumberConstructor;
        default: number;
    };
    vbarWidth: {
        type: NumberConstructor;
        default: number;
    };
    vbarFillColor: {
        type: StringConstructor;
        default: string;
    };
    vbarRightColor: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    type: string;
    canvWidth: number;
    canvHeight: number;
    canvFillColor: string;
    radius: number;
    lineColor: string;
    media: Record<string, any>;
    canvClass: string;
    circleGradient: unknown[];
    frequLnum: number;
    frequLineCap: boolean;
    frequDirection: string;
    connectDestination: boolean;
    vbarBgColor: string;
    vbarCaps: boolean;
    vbarSpace: number;
    vbarWidth: number;
    vbarFillColor: string;
    vbarRightColor: string;
}>;
export default _default;
